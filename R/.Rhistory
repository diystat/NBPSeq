q()
n
q()
n
q()
n
ls(nb.glm.test)
q()
n
install.packages("roxygen")
install.packages("gsubfn")
q()
n
install.packages("roxygen")
installl.packages("gsubfn")
q()
n
q()
n
q()
n
q()
n
q()
n
q()
n
q()
n
q()
n
lm.wfit
q()
n
glm.fit
q()
n
install.packages("roxygen")
q()
n
library(NBPSeq)
grp.ids
data(arab);
grp.ids = c(1, 1, 1, 2, 2, 2);
set.seed(999);
obj = prepare.nbp(arab[1:100,], grp.ids, print.level=5);
obj = estimate.disp(obj, print.level=5);
grp1 = 1;
grp2 = 2;
obj = exact.nb.test(obj, grp1, grp2, print.level=5);
print.nbp(obj);
q()
n
dnbinom
q()
n
get.mean.hat
get.mean.hat
NBPSeq:::get.mean.hat
q()
n
lines
q()
n
q()
n
q()
n
q()
n
q()
n
q()
n
q()
n
irls.nb
library(NBPSeq)
irls.nb
q()
n
irls.nbp
q()
n
library(NBPSeq)
irls.nb.1
args(irls.nb.1)
irls.nbp.1
pi
irls.nb.1
args(irls.nb.1)
source('estimate.disp.mapl.v2.R')
q()
n
apl.phi.alpha.1
q()
n
q()
n
q()
n
irls.nb
disp.nbp
disp.nbp
library(NBPSeq)
disp.nbp
optim.disp.apl
optim.disp.ml
irls.nb
irls.nbp.1
irls.nb
irls.nb.1
irls.nbp
irls.nbp.1
irls.nb.1
q()
n
q()
n
library(NBPSeq)
optim.disp.ml
optim.fun
optim.disp.ml
optim.disp.apl
q()
n
q()
n
log.likelihood.nb
log.likelihoood.nb
library(NBPSeq)
log.likelihood.nb
irls.nb
irls.nb.1
q()
n
q()
n
library(NBPSeq)
q()
n
q()
n
library(NBPSeq)
nb.glm.test
q()
n
q()
n
library(NBPSeq)
rnbinom
q()
n
dnbinom
c
c
Q
n
plot(p1, p2)
prepare.nbp
library(NBPSeq)
prepare.nbp
thin.counts
thin.counts
a
a =1
a[1]
a[2]
q()
n
q()
n
m
n
print(n)
ls
lib.sizes
c
method
c
c
n.grps
grps
c
res
exp(-1.9748865)
c
q()
n
res
res
res
warnings()
res
nbp
nbq
par.lower
nbq
nbq
nbq$par
nbq$fun
z
hist(pi)
head(obj$pseudo.counts)
pi.grid
nbq$fun(nbq$par)
nbq$fun(nbq$par)
nb2$fun
nbq$fun
nb2
warnings()
log.phi.nbp
log.phi.nbq
optim.pcl
warnings()
nb2
nb2
warnings()
nb2
warnings()
nb2
warnings()
log(2)
nb2
log(10)
m
print()
print(n)
c
grps
Q
nb2
nbp
exp(-1.26)
q()
n
nb2
nbp.optim.pcal
nbp.optim.pcl
optim.pcal
optim.pcal
optim.pcl
nb2
q()n
q()
n
q()
n
q()
n
q()
n
q()
n
source('smart.plot.R')
ojb
obj
str(obj)
obj$freqs
str(obj)
q()
n
q()
n
library(NBPSeq)
smart.plot
q()
n
q()
n
q()
n
